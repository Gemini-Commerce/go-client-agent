/*
agent/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agent

import (
	"encoding/json"
)

// checks if the ListRequestFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRequestFilters{}

// ListRequestFilters struct for ListRequestFilters
type ListRequestFilters struct {
	Email                []string `json:"email,omitempty"`
	Lastname             []string `json:"lastname,omitempty"`
	Code                 []string `json:"code,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListRequestFilters ListRequestFilters

// NewListRequestFilters instantiates a new ListRequestFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRequestFilters() *ListRequestFilters {
	this := ListRequestFilters{}
	return &this
}

// NewListRequestFiltersWithDefaults instantiates a new ListRequestFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRequestFiltersWithDefaults() *ListRequestFilters {
	this := ListRequestFilters{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ListRequestFilters) GetEmail() []string {
	if o == nil || IsNil(o.Email) {
		var ret []string
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequestFilters) GetEmailOk() ([]string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ListRequestFilters) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given []string and assigns it to the Email field.
func (o *ListRequestFilters) SetEmail(v []string) {
	o.Email = v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *ListRequestFilters) GetLastname() []string {
	if o == nil || IsNil(o.Lastname) {
		var ret []string
		return ret
	}
	return o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequestFilters) GetLastnameOk() ([]string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *ListRequestFilters) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given []string and assigns it to the Lastname field.
func (o *ListRequestFilters) SetLastname(v []string) {
	o.Lastname = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListRequestFilters) GetCode() []string {
	if o == nil || IsNil(o.Code) {
		var ret []string
		return ret
	}
	return o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequestFilters) GetCodeOk() ([]string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ListRequestFilters) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given []string and assigns it to the Code field.
func (o *ListRequestFilters) SetCode(v []string) {
	o.Code = v
}

func (o ListRequestFilters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRequestFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListRequestFilters) UnmarshalJSON(data []byte) (err error) {
	varListRequestFilters := _ListRequestFilters{}

	err = json.Unmarshal(data, &varListRequestFilters)

	if err != nil {
		return err
	}

	*o = ListRequestFilters(varListRequestFilters)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "lastname")
		delete(additionalProperties, "code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *ListRequestFilters) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *ListRequestFilters) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableListRequestFilters struct {
	value *ListRequestFilters
	isSet bool
}

func (v NullableListRequestFilters) Get() *ListRequestFilters {
	return v.value
}

func (v *NullableListRequestFilters) Set(val *ListRequestFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableListRequestFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableListRequestFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRequestFilters(val *ListRequestFilters) *NullableListRequestFilters {
	return &NullableListRequestFilters{value: val, isSet: true}
}

func (v NullableListRequestFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRequestFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
